<header>
  <nav class="main-navbar">
    <a href="/" class="navbar-logo">
      <img src="/static/logos.png" alt="Plant Store Logo" />
    </a>

    <button class="hamburger-menu" id="hamburgerMenuBtn" aria-label="Toggle Navigation" aria-expanded="false">
      <span>‚ò∞</span>
    </button>

    <div class="nav-links" id="navLinks">
      <a href="/">Home</a>
      <a href="https://www.homegardennet.com/?m=1" target="_blank" rel="noopener">Blog</a>
      <a href="/#about">About</a>
      <a href="/policy">Policy</a>
      <a href="/cart">Cart</a>
    </div>

    <div class="nav-icons">
      <div class="search-container">
        <input type="text" placeholder="Search products..." class="search-bar" onkeyup="searchProducts(this.value)" aria-label="Search products" />
        <span class="search-icon">üîç</span>
      </div>
      <button id="profileDropdownToggle" class="profile-icon-btn" aria-label="Toggle Profile Menu" aria-expanded="false">
        <img src="/static/profile.png" alt="Profile" class="profile-icon" />
      </button>
    </div>
  </nav>
</header>

<!-- Category Dropdown (Mobile) -->
<div class="category-dropdown" id="categoryDropdown" aria-hidden="true">
  <button class="close-btn" id="closeCategoryDropdownBtn" aria-label="Close Categories">√ó</button>
  <a href="/">Home</a>
  <a href="https://www.homegardennet.com/?m=1" target="_blank" rel="noopener">Blog</a>
  <a href="/#about">About</a>
  <a href="/policy">Policy</a>
  <a href="/cart">Cart</a>
  <% if (typeof categories !== 'undefined' && categories && categories.length) { %>
    <% categories.forEach(category => { %>
      <div class="mobile-category-group">
        <strong><%= category.name %></strong>
        <% if (category.subcategories && category.subcategories.length > 0) { %>
          <% category.subcategories.forEach(sub => { %>
            <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>&sub=<%= encodeURIComponent(sub.name) %>">
              <%= sub.name %>
            </a>
          <% }) %>
        <% } %>
      </div>
    <% }) %>
  <% } else { %>
    <p>No categories available</p>
  <% } %>
</div>

<!-- Profile Dropdown / Login Modal -->
<% if (user) { %>
  <div class="profile-dropdown" id="profileDropdown" aria-hidden="true">
    <div class="profile-header">
      <img src="/static/profile.png" alt="Profile" class="profile-avatar" />
      <div class="profile-info">
        <p class="profile-name"><strong><%= user.name || 'User' %></strong></p>
        <p class="profile-email"><%= user.email || 'No email provided' %></p>
      </div>
    </div>
    <p class="profile-phone"><%= user.phone || 'No phone provided' %></p>
    <a href="/orders" class="profile-link">My Orders</a>
    <form action="/api/users/logout" method="POST">
      <button type="submit" class="logout-btn">Logout</button>
    </form>
  </div>
<% } else { %>
  <div class="modal" id="loginRegisterModal" aria-hidden="true">
    <div class="modal-content">
      <button class="close-btn" id="closeLoginModalBtn" aria-label="Close Modal">√ó</button>
      <h3>Welcome to Plant Store</h3>
      <p>Login or register to access your account.</p>
      <div class="modal-actions">
        <a href="/login"><button class="login-btn">Login</button></a>
        <a href="/register"><button class="register-btn">Register</button></a>
      </div>
    </div>
  </div>
<% } %>

<style>
/* Reset and Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  line-height: 1.6;
}

/* Main Navbar */
.main-navbar {
  background: linear-gradient(135deg, #4caf50, #388e3c);
  color: #fff;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 20px;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1000;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.navbar-logo img {
  height: 40px;
  transition: transform 0.3s ease;
}

.navbar-logo img:hover {
  transform: scale(1.1);
}

.nav-links {
  display: flex;
  gap: 16px;
  align-items: center;
}

.nav-links a {
  color: #fff;
  text-decoration: none;
  font-weight: 500;
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 1rem;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.nav-links a:hover,
.nav-links a:focus {
  background-color: rgba(255, 255, 255, 0.2);
  transform: translateY(-2px);
  outline: none;
}

.nav-icons {
  display: flex;
  align-items: center;
  gap: 12px;
}

.search-container {
  position: relative;
  display: flex;
  align-items: center;
}

.search-bar {
  padding: 8px 12px 8px 36px;
  border-radius: 20px;
  border: 1px solid #e0e0e0;
  width: 180px;
  font-size: 0.9rem;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.search-bar:focus {
  outline: none;
  border-color: #4caf50;
  box-shadow: 0 0 8px rgba(76, 175, 80, 0.3);
}

.search-icon {
  position: absolute;
  left: 12px;
  color: #666;
  font-size: 1rem;
}

.profile-icon-btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 4px;
  border-radius: 50%;
  transition: background-color 0.3s ease;
}

.profile-icon-btn:hover,
.profile-icon-btn:focus {
  background-color: rgba(255, 255, 255, 0.2);
  outline: none;
}

.profile-icon {
  width: 28px;
  height: 28px;
  filter: invert(1);
}

.hamburger-menu {
  display: none;
  background: none;
  border: none;
  font-size: 2rem;
  color: #fff;
  cursor: pointer;
  padding: 4px;
  transition: transform 0.3s ease;
}

.hamburger-menu:hover,
.hamburger-menu:focus {
  transform: scale(1.1);
  outline: none;
}

/* Category Dropdown (Mobile) */
.category-dropdown {
  display: none;
  flex-direction: column;
  background: linear-gradient(135deg, #388e3c, #2e7d32);
  color: #fff;
  position: fixed;
  top: 0;
  right: -100%;
  width: 80vw;
  max-width: 300px;
  height: 100vh;
  z-index: 2500;
  padding: 40px 20px;
  overflow-y: auto;
  transition: right 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.category-dropdown.show {
  display: flex;
  right: 0;
}

.category-dropdown a {
  color: #e0ffe0;
  text-decoration: none;
  margin: 10px 0 10px 16px;
  font-size: 1rem;
  padding: 8px 12px;
  border-left: 2px solid #4caf50;
  transition: color 0.2s ease, background-color 0.2s ease;
}

.category-dropdown a:hover,
.category-dropdown a:focus {
  color: #fff;
  background-color: rgba(255, 255, 255, 0.1);
  outline: none;
}

.mobile-category-group {
  margin: 16px 0;
  padding: 0 16px;
}

.mobile-category-group strong {
  display: block;
  margin: 8px 0;
  font-weight: 600;
  font-size: 1.1rem;
}

.category-dropdown .close-btn {
  position: absolute;
  top: 16px;
  right: 16px;
  background: none;
  border: none;
  color: #fff;
  font-size: 1.8rem;
  cursor: pointer;
  transition: transform 0.3s ease;
}

.category-dropdown .close-btn:hover,
.category-dropdown .close-btn:focus {
  transform: scale(1.1);
  outline: none;
}

/* Profile Dropdown */
.profile-dropdown {
  display: none;
  position: absolute;
  top: 60px;
  right: 20px;
  background: #fff;
  color: #333;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  min-width: 240px;
  z-index: 2000;
  flex-direction: column;
  gap: 12px;
  border: 1px solid #e0e0e0;
}

.profile-dropdown.show {
  display: flex;
}

.profile-header {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 8px;
}

.profile-avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 2px solid #4caf50;
}

.profile-info {
  display: flex;
  flex-direction: column;
}

.profile-name {
  font-size: 1.1rem;
  font-weight: 600;
}

.profile-email,
.profile-phone {
  font-size: 0.9rem;
  color: #666;
}

.profile-link {
  color: #4caf50;
  text-decoration: none;
  font-weight: 500;
  padding: 8px;
  border-radius: 6px;
  transition: background-color 0.2s ease;
}

.profile-link:hover,
.profile-link:focus {
  background-color: rgba(76, 175, 80, 0.1);
  outline: none;
}

.logout-btn {
  background: #f44336;
  color: #fff;
  padding: 8px 16px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 500;
  transition: background-color 0.2s ease;
}

.logout-btn:hover,
.logout-btn:focus {
  background: #d32f2f;
  outline: none;
}

/* Login/Register Modal */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.6);
  z-index: 3000;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background: #fff;
  padding: 24px 32px;
  border-radius: 12px;
  text-align: center;
  position: relative;
  max-width: 400px;
  width: 90%;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  animation: fadeIn 0.3s ease;
}

.modal-content h3 {
  font-size: 1.5rem;
  margin-bottom: 12px;
  color: #333;
}

.modal-content p {
  font-size: 1rem;
  color: #666;
  margin-bottom: 20px;
}

.modal-actions {
  display: flex;
  justify-content: center;
  gap: 16px;
}

.login-btn,
.register-btn {
  padding: 10px 24px;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
}

.login-btn {
  background: #4caf50;
  color: #fff;
}

.login-btn:hover,
.login-btn:focus {
  background: #388e3c;
  transform: translateY(-2px);
  outline: none;
}

.register-btn {
  background: #2e7d32;
  color: #fff;
}

.register-btn:hover,
.register-btn:focus {
  background: #255d27;
  transform: translateY(-2px);
  outline: none;
}

.modal .close-btn {
  position: absolute;
  top: 16px;
  right: 16px;
  font-size: 1.8rem;
  color: #333;
  background: none;
  border: none;
  cursor: pointer;
  transition: transform 0.3s ease;
}

.modal .close-btn:hover,
.modal .close-btn:focus {
  transform: scale(1.1);
  outline: none;
}

/* Animation for Modal */
@keyframes fadeIn {
  from { opacity: 0; transform: scale(0.9); }
  to { opacity: 1; transform: scale(1); }
}

/* Responsive Design */
@media (max-width: 800px) {
  .main-navbar {
    padding: 10px 16px;
  }

  .navbar-logo img {
    height: 32px;
  }

  .hamburger-menu {
    display: block;
  }

  .nav-links {
    display: none;
  }

  .search-bar {
    width: 140px;
  }

  .category-dropdown {
    width: 100%;
    max-width: none;
  }
}

@media (min-width: 801px) {
  .category-dropdown,
  .hamburger-menu {
    display: none !important;
  }
}

@media (max-width: 480px) {
  .main-navbar {
    padding: 8px 12px;
  }

  .navbar-logo img {
    height: 28px;
  }

  .search-bar {
    width: 120px;
    font-size: 0.85rem;
  }

  .hamburger-menu {
    font-size: 1.8rem;
  }

  .category-dropdown {
    padding: 30px 15px;
  }

  .category-dropdown a {
    font-size: 0.95rem;
  }

  .mobile-category-group strong {
    font-size: 1rem;
  }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const hamburgerBtn = document.getElementById("hamburgerMenuBtn");
  const categoryDropdown = document.getElementById("categoryDropdown");
  const closeCategoryBtn = document.getElementById("closeCategoryDropdownBtn");
  const profileToggle = document.getElementById("profileDropdownToggle");
  const profileDropdown = document.getElementById("profileDropdown");
  const loginModal = document.getElementById("loginRegisterModal");
  const closeLoginModalBtn = document.getElementById("closeLoginModalBtn");
  const userLoggedIn = "<%= user ? 'true' : 'false' %>";

  // Debounce function to prevent rapid toggling
  const debounce = (func, wait) => {
    let timeout;
    return (...args) => {
      clearTimeout(timeout);
      timeout = setTimeout(() => func.apply(this, args), wait);
    };
  };

  // Toggle category dropdown
  const toggleCategoryDropdown = () => {
    const isOpen = categoryDropdown.classList.contains("show");
    categoryDropdown.classList.toggle("show", !isOpen);
    categoryDropdown.setAttribute("aria-hidden", isOpen);
    hamburgerBtn.setAttribute("aria-expanded", !isOpen);
  };

  hamburgerBtn.addEventListener("click", debounce((e) => {
    e.stopPropagation();
    toggleCategoryDropdown();
  }, 200));

  // Close category dropdown
  closeCategoryBtn.addEventListener("click", (e) => {
    e.stopPropagation();
    categoryDropdown.classList.remove("show");
    categoryDropdown.setAttribute("aria-hidden", "true");
    hamburgerBtn.setAttribute("aria-expanded", "false");
  });

  // Toggle profile dropdown or login modal
  profileToggle.addEventListener("click", debounce((e) => {
    e.stopPropagation();
    if (userLoggedIn === "true") {
      if (profileDropdown) {
        const isOpen = profileDropdown.classList.contains("show");
        profileDropdown.classList.toggle("show", !isOpen);
        profileDropdown.setAttribute("aria-hidden", isOpen);
        profileToggle.setAttribute("aria-expanded", !isOpen);
      }
    } else {
      if (loginModal) {
        loginModal.style.display = "flex";
        loginModal.setAttribute("aria-hidden", "false");
        profileToggle.setAttribute("aria-expanded", "true");
      }
    }
  }, 200));

  // Close login modal
  if (closeLoginModalBtn) {
    closeLoginModalBtn.addEventListener("click", (e) => {
      e.stopPropagation();
      closeLoginRegisterModal();
    });
  }

  // Close modals/dropdowns on outside click
  document.addEventListener("click", (e) => {
    if (
      categoryDropdown.classList.contains("show") &&
      !categoryDropdown.contains(e.target) &&
      e.target !== hamburgerBtn &&
      !hamburgerBtn.contains(e.target)
    ) {
      categoryDropdown.classList.remove("show");
      categoryDropdown.setAttribute("aria-hidden", "true");
      hamburgerBtn.setAttribute("aria-expanded", "false");
    }

    if (
      profileDropdown &&
      profileDropdown.classList.contains("show") &&
      !profileDropdown.contains(e.target) &&
      e.target !== profileToggle &&
      !profileToggle.contains(e.target)
    ) {
      profileDropdown.classList.remove("show");
      profileDropdown.setAttribute("aria-hidden", "true");
      profileToggle.setAttribute("aria-expanded", "false");
    }

    if (
      loginModal &&
      loginModal.style.display === "flex" &&
      !loginModal.querySelector(".modal-content").contains(e.target)
    ) {
      closeLoginRegisterModal();
    }
  });

  // Prevent closing when clicking inside dropdowns
  categoryDropdown.addEventListener("click", (e) => e.stopPropagation());
  if (profileDropdown) profileDropdown.addEventListener("click", (e) => e.stopPropagation());
  if (loginModal) loginModal.querySelector(".modal-content").addEventListener("click", (e) => e.stopPropagation());

  // Close on Escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      if (categoryDropdown.classList.contains("show")) {
        categoryDropdown.classList.remove("show");
        categoryDropdown.setAttribute("aria-hidden", "true");
        hamburgerBtn.setAttribute("aria-expanded", "false");
      }
      if (profileDropdown && profileDropdown.classList.contains("show")) {
        profileDropdown.classList.remove("show");
        profileDropdown.setAttribute("aria-hidden", "true");
        profileToggle.setAttribute("aria-expanded", "false");
      }
      if (loginModal && loginModal.style.display === "flex") {
        closeLoginRegisterModal();
      }
    }
  });

  // Close login/register modal
  window.closeLoginRegisterModal = function () {
    if (loginModal) {
      loginModal.style.display = "none";
      loginModal.setAttribute("aria-hidden", "true");
      profileToggle.setAttribute("aria-expanded", "false");
    }
  };

  // Check login status before action
  window.checkLoginBeforeAction = function (actionCallback) {
    fetch('/check-login')
      .then(res => res.json())
      .then(data => {
        if (data.loggedIn) {
          actionCallback();
        } else {
          if (loginModal) {
            loginModal.style.display = "flex";
            loginModal.setAttribute("aria-hidden", "false");
            profileToggle.setAttribute("aria-expanded", "true");
          }
        }
      })
      .catch(err => console.error('Login check failed:', err));
  };

  // Placeholder for searchProducts (to be implemented in main page)
  window.searchProducts = function (value) {
    console.log('Searching for:', value);
    // Implement search logic here
  };
});
</script>