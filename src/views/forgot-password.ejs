<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Forgot Password</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      color: #333;
      animation: fadeIn 1s ease-out;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .container {
      max-width: 400px;
      width: 90%;
      background: #fff;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      position: relative;
      animation: slideUp 0.5s ease-out;
    }

    @keyframes slideUp {
      from { transform: translateY(50px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }

    .logo {
      position: absolute;
      top: -60px;
      left: 50%;
      transform: translateX(-50%);
      width: 100px;
      height: 100px;
      border-radius: 50%;
      background-color: #4CAF50;
      padding: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .logo img {
      width: 100%;
      height: 100%;
      object-fit: contain;
      border-radius: 50%;
    }

    h2 {
      margin-top: 50px;
      margin-bottom: 20px;
      font-size: 1.8em;
      color: #4CAF50;
      text-align: center;
    }

    input[type="text"], input[type="password"] {
      width: 100%;
      padding: 12px;
      margin: 10px 0;
      border: 1px solid #ddd;
      border-radius: 4px;
      background: #fff;
      color: #333;
      box-sizing: border-box;
      transition: border-color 0.3s;
    }

    input[type="text"]:focus, input[type="password"]:focus {
      border-color: #4CAF50;
      outline: none;
    }

    input[type="submit"] {
      background-color: #4CAF50;
      color: white;
      border: none;
      padding: 12px;
      cursor: pointer;
      border-radius: 4px;
      width: 100%;
      margin-top: 10px;
      font-size: 16px;
      transition: background-color 0.3s, transform 0.2s;
    }

    input[type="submit"]:hover {
      background-color: #45a049;
      transform: translateY(-2px);
    }

    #message {
      margin-top: 15px;
      font-weight: bold;
      text-align: center;
    }

    .error {
      color: red;
    }

    .success {
      color: #4CAF50;
    }

    .back-link {
      display: block;
      text-align: center;
      margin-top: 15px;
      color: #4CAF50;
      text-decoration: none;
      font-size: 0.9em;
    }

    .back-link:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>

  <div class="container">
    <div class="logo">
      <img src="/static/logos.png" alt="Logo" onerror="this.style.display='none'">
    </div>
    <h2>Forgot Password</h2>

    <!-- Step 1: Verify phone -->
    <form id="forgotPasswordForm" autocomplete="off">
      <input type="text" name="phone" id="phone" placeholder="Enter your phone number" required pattern="^\d{10}$" title="Phone number must be 10 digits" />
      <input type="submit" value="Verify Phone" />
    </form>

    <!-- Step 2: Reset Password -->
    <form id="resetPasswordForm" autocomplete="off" style="display:none;">
      <input type="password" name="newPassword" id="newPassword" placeholder="Enter your new password" required minlength="6" />
      <input type="submit" value="Reset Password" />
    </form>

    <p id="message" aria-live="polite"></p>
    <a href="/login" class="back-link">Back to Login</a>
  </div>

  <script>
    let userId = null;

    const messageEl = document.getElementById('message');
    const forgotForm = document.getElementById('forgotPasswordForm');
    const resetForm = document.getElementById('resetPasswordForm');
    const phoneInput = document.getElementById('phone');
    const passwordInput = document.getElementById('newPassword');

    const showMessage = (msg, type = '') => {
      messageEl.textContent = msg;
      messageEl.className = type;
    };

    forgotForm.addEventListener('submit', async (event) => {
      event.preventDefault();

      const phone = phoneInput.value.trim();

      if (!/^\d{10}$/.test(phone)) {
        showMessage('Please enter a valid 10-digit phone number.', 'error');
        return;
      }

      showMessage('Verifying phone number...');

      try {
        const response = await fetch('/api/users/verify-phone', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ phone })
        });

        const result = await response.json();

        if (response.ok) {
          userId = result.userId;
          showMessage(result.message, 'success');
          forgotForm.style.display = 'none';
          resetForm.style.display = 'block';
        } else {
          throw new Error(result.message || 'Verification failed.');
        }
      } catch (error) {
        showMessage(error.message, 'error');
      }
    });

    resetForm.addEventListener('submit', async (event) => {
      event.preventDefault();

      const newPassword = passwordInput.value.trim();

      if (!userId) {
        showMessage('User verification failed. Please start again.', 'error');
        return;
      }

      if (newPassword.length < 6) {
        showMessage('Password must be at least 6 characters long.', 'error');
        return;
      }

      showMessage('Resetting password...');

      try {
        const response = await fetch('/api/users/reset-password', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ userId, newPassword })
        });

        const result = await response.json();

        if (response.ok) {
          showMessage(result.message, 'success');
          resetForm.reset();
        } else {
          throw new Error(result.message || 'Password reset failed.');
        }
      } catch (error) {
        showMessage(error.message, 'error');
      }
    });
  </script>
</body>
</html>
