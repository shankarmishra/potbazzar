<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders - Plant Store</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&family=Inter:wght@400;700&display=swap" rel="stylesheet" />
    <style>
        :root {
            --primary-color: #4CAF50;
            --secondary-color: #1976D2;
            --accent-color: #FF9800;
            --text-color: #333;
            --bg-color: #f8f9fa;
            --card-bg: #ffffff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            color: var(--text-color);
            line-height: 1.6;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Navbar */
        .navbar {
            background: linear-gradient(90deg, var(--primary-color), #45a049);
            padding: 1rem 2rem;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .nav-logo img {
            height: 36px;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
        }

        .nav-links a {
            color: #fff;
            text-decoration: none;
            font-weight: 600;
            font-size: 1rem;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: background 0.3s, transform 0.2s;
        }

        .nav-links a:hover,
        .nav-links a:focus {
            background: rgba(0, 0, 0, 0.2);
            transform: translateY(-2px);
            outline: none;
        }

        .nav-icons {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .search-bar {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            border: 1px solid #ddd;
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            width: 200px;
            font-size: 1rem;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

        .search-bar:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 5px rgba(76, 175, 80, 0.3);
            outline: none;
        }

        .cart-icon-btn,
        .profile-icon-btn,
        .three-dots {
            background: none;
            border: none;
            cursor: pointer;
        }

        .cart-icon,
        .profile-icon {
            width: 24px;
            height: 24px;
            filter: brightness(0) invert(1);
            transition: transform 0.3s;
        }

        .cart-icon-btn:hover .cart-icon,
        .profile-icon-btn:hover .profile-icon {
            transform: scale(1.1);
        }

        .three-dots {
            display: none;
            cursor: pointer;
            font-size: 2rem;
            color: #fff;
            margin: 0;
            z-index: 1201;
            background: none;
            border: none;
        }

        /* Profile Dropdown */
        .profile-dropdown {
            display: none;
            position: absolute;
            top: 60px;
            right: 1rem;
            background: var(--card-bg);
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            min-width: 240px;
            padding: 1rem;
            z-index: 1300;
        }

        .profile-dropdown.show {
            display: flex;
            flex-direction: column;
        }

        .profile-dropdown p {
            margin: 0.5rem 0;
            font-size: 0.95rem;
            color: var(--text-color);
        }

        .profile-dropdown button {
            width: 100%;
            padding: 0.5rem;
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 6px;
            font-size: 0.95rem;
            cursor: pointer;
            margin: 0.25rem 0;
            transition: background 0.3s, transform 0.2s;
        }

        .profile-dropdown button:hover {
            background: #388e3c;
            transform: translateY(-2px);
        }

        /* Category Bar (Desktop) */
        .all-categories-bar {
            background: #fff;
            border-bottom: 1px solid #e0e0e0;
            padding: 12px 10px;
            display: flex;
            gap: 24px;
            justify-content: center;
            flex-wrap: wrap;
            position: sticky;
            top: 60px;
            z-index: 900;
        }

        .category-bar-item {
            position: relative;
            margin-right: 18px;
            margin-bottom: 8px;
            white-space: nowrap;
        }

        .category-bar-item a {
            color: #388e3c;
            text-decoration: none;
            font-weight: 500;
            padding: 8px 12px;
            border-radius: 20px;
            transition: background 0.3s, color 0.3s;
            display: inline-block;
        }

        .category-bar-item a:hover {
            background: rgba(56, 142, 60, 0.1);
        }

        .subcategory-list {
            display: none;
            position: absolute;
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: #fff;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 10px;
            margin-top: 4px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            min-width: 150px;
            z-index: 1002;
        }

        .category-bar-item:hover .subcategory-list {
            display: block;
        }

        .subcategory-list a {
            color: #388e3c;
            padding: 6px 8px;
            border-radius: 4px;
            display: block;
            transition: background 0.3s;
            font-size: 0.98rem;
        }

        .subcategory-list a:hover {
            background: rgba(56, 142, 60, 0.1);
        }

        /* Category Sidebar (Mobile) */
        .category-sidebar {
            display: none;
            flex-direction: column;
            position: fixed;
            top: 0;
            left: -100vw;
            width: 80vw;
            max-width: 320px;
            height: 100vh;
            background: linear-gradient(135deg, #176b2c, #45a049);
            color: #fff;
            z-index: 2000;
            padding: 2rem 1.2rem 1.2rem 1.2rem;
            overflow-y: auto;
            transition: left 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .category-sidebar.show {
            display: flex;
            left: 0;
        }

        .category-sidebar .close-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            color: #fff;
            font-size: 2rem;
            cursor: pointer;
        }

        .sidebar-category {
            margin-bottom: 1.2rem;
        }

        .sidebar-category > a {
            color: #fff;
            font-size: 1.1rem;
            font-weight: 600;
            text-decoration: none;
        }

        .sidebar-subcategories {
            margin: 0.5rem 0 0 1rem;
            padding: 0;
            list-style: disc;
        }

        .sidebar-subcategories li {
            margin-bottom: 0.3rem;
        }

        .sidebar-subcategories a {
            color: #e0ffe0;
            font-size: 1rem;
            text-decoration: none;
        }

        .sidebar-subcategories a:hover {
            color: var(--accent-color);
        }

        /* Orders Content */
        .container {
            max-width: 1400px;
            margin: 120px auto 40px;
            padding: 0 15px;
            position: relative;
        }

        h2 {
            color: var(--primary-color);
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 2rem;
            text-align: center;
            position: sticky;
            top: 110px; /* Adjusted for navbar and category bar */
            background: var(--bg-color);
            padding: 1rem 0;
            z-index: 10;
            border-radius: 8px;
        }

        .order-container {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            animation: fadeIn 0.5s ease-out;
            transition: transform 0.3s ease;
        }

        .order-container:hover {
            transform: translateY(-5px);
        }

        .order-item {
            display: grid;
            grid-template-columns: 120px 1fr auto;
            gap: 1rem;
            padding: 1rem 0;
            border-bottom: 1px solid #eee;
            align-items: center;
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .order-item img {
            width: 100%;
            max-width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 8px;
            border: 1px solid #e0e0e0;
            background: #fafafa;
        }

        .order-details {
            text-align: left;
        }

        .product-name {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .product-price {
            font-size: 1.1rem;
            color: var(--primary-color);
            margin: 0.3rem 0;
        }

        .order-status {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 600;
            background: linear-gradient(45deg, #e8f5e9, #c8e6c9);
            color: var(--primary-color);
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            margin: 0.5rem 0;
        }

        .status-progress {
            margin: 1rem 0;
            background: #f0f0f0;
            border-radius: 4px;
            height: 8px;
            overflow: hidden;
        }

        .status-progress-bar {
            height: 100%;
            background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
            transition: width 0.5s ease;
        }

        .delivery-info {
            background: #f5f5f5;
            padding: 1rem;
            border-radius: 8px;
            margin: 1rem 0;
            font-size: 0.95rem;
        }

        .error-message {
            color: #d32f2f;
            background: #ffeaea;
            padding: 1rem;
            border-radius: 8px;
            margin: 1rem 0;
            text-align: center;
        }

        .total-amount {
            font-size: 1.2rem;
            font-weight: 700;
            text-align: right;
            color: var(--secondary-color);
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #eee;
        }

        .track-button {
            background: var(--accent-color);
            color: white;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .track-button:hover {
            transform: scale(1.05);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
        }

        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 2rem auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Footer */
        footer {
            background: linear-gradient(90deg, var(--primary-color), #45a049);
            color: #fff;
            text-align: center;
            padding: 1.5rem 0;
            margin-top: auto;
        }

        footer p {
            margin: 0;
            font-size: 0.9rem;
        }

        footer a {
            color: #e0ffe0;
            text-decoration: none;
            font-weight: 600;
        }

        footer a:hover {
            color: var(--accent-color);
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .container {
                margin: 110px auto 20px;
                padding: 0 10px;
            }

            .order-item {
                grid-template-columns: 100px 1fr auto;
            }

            .order-item img {
                max-width: 100px;
                height: 100px;
            }

            h2 {
                font-size: 2rem;
            }
        }

        @media (max-width: 800px) {
            .all-categories-bar {
                display: none !important;
            }
            .three-dots {
                display: block !important;
            }
            .nav-links {
                display: none !important;
            }
        }

        @media (min-width: 801px) {
            .three-dots,
            .category-sidebar {
                display: none !important;
            }
            .nav-links {
                display: flex !important;
            }
        }

        @media (max-width: 768px) {
            .order-item {
                grid-template-columns: 1fr;
                text-align: center;
            }

            .order-item img {
                max-width: 80px;
                height: 80px;
                margin: 0 auto;
            }

            .order-details {
                text-align: center;
            }

            .total-amount {
                text-align: center;
            }

            .track-button {
                width: 100%;
                padding: 0.75rem;
            }

            .navbar {
                padding: 0.75rem 1rem;
            }

            .nav-logo img {
                height: 30px;
            }

            .search-bar {
                width: 150px;
            }
        }

        @media (max-width: 480px) {
            h2 {
                font-size: 1.8rem;
            }

            .order-container {
                padding: 1rem;
            }

            .product-name {
                font-size: 1rem;
            }

            .product-price {
                font-size: 0.95rem;
            }

            .delivery-info {
                font-size: 0.85rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
      <button class="three-dots" id="threeDotsBtn" onclick="toggleCategorySidebar()" aria-label="Open Categories">☰</button>
      <a href="/" class="nav-logo">
        <img src="/static/logo.png" alt="Plant Store Logo" loading="lazy" />
      </a>
      <div class="nav-links">
        <a href="/">Home</a>
        <a href="https://www.homegardennet.com/?m=1" target="_blank" rel="noopener">Blog</a>
        <a href="/#about">About</a>
        <a href="/policy">Policy</a>
        <a href="/cart">Cart</a>
      </div>
      <div class="nav-icons">
        <input
          type="text"
          placeholder="Search orders..."
          class="search-bar"
          onkeyup="searchOrders(this.value)"
          aria-label="Search orders"
        />
        <button class="profile-icon-btn" onclick="toggleProfile()" aria-label="Toggle Profile">
          <img src="/static/profile-icon.png" alt="Profile" class="profile-icon" loading="lazy" />
        </button>
      </div>
    </nav>

    <!-- Profile Dropdown / Login Modal -->
    <% if (user) { %>
      <div class="profile-dropdown" id="profileDropdown">
        <p><strong>Name:</strong> <%= user.name || 'Not provided' %></p>
        <p><strong>Email:</strong> <%= user.email %></p>
        <p><strong>Phone:</strong> <%= user.phone || 'Not provided' %></p>
        <p><strong>Address:</strong> <%= user.address || 'Not provided' %></p>
        <button onclick="window.location.href='/orders'">My Orders</button>
        <button onclick="logout()">Logout</button>
      </div>
    <% } else { %>
      <div class="modal" id="loginModal" style="display:none;">
        <div class="modal-content">
          <button class="close-btn" onclick="closeLoginModal()" aria-label="Close modal">×</button>
          <h3>Please log in or register to proceed</h3>
          <button onclick="window.location.href='/login'">Login</button>
          <button onclick="window.location.href='/register'">Register</button>
        </div>
      </div>
    <% } %>

    <!-- Category Sidebar (Mobile) -->
    <div class="category-sidebar" id="categorySidebar">
      <button class="close-btn" onclick="toggleCategorySidebar()" aria-label="Close Categories">×</button>
      <h3 style="margin-bottom:1rem;">Menu</h3>
      <div class="sidebar-category">
        <a href="/"><strong>Home</strong></a>
      </div>
      <div class="sidebar-category">
        <a href="https://www.homegardennet.com/?m=1" target="_blank" rel="noopener"><strong>Blog</strong></a>
      </div>
      <div class="sidebar-category">
        <a href="/#about"><strong>About</strong></a>
      </div>
      <div class="sidebar-category">
        <a href="/policy"><strong>Policy</strong></a>
      </div>
      <div class="sidebar-category">
        <a href="/cart"><strong>Cart</strong></a>
      </div>
      <hr style="margin: 1rem 0; border: none; border-top: 1px solid #fff; opacity: 0.2;">
      <% if (typeof categories !== 'undefined' && categories && categories.length) { %>
        <% categories.forEach(category => { %>
          <div class="sidebar-category">
            <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>">
              <strong><%= category.name %></strong>
            </a>
            <% if (category.subcategories && category.subcategories.length > 0) { %>
              <ul class="sidebar-subcategories">
                <% category.subcategories.forEach(sub => { %>
                  <li>
                    <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>&subcategory=<%= encodeURIComponent(sub.name ? sub.name : sub) %>">
                      <%= sub.name ? sub.name : sub %>
                    </a>
                  </li>
                <% }) %>
              </ul>
            <% } %>
          </div>
        <% }) %>
      <% } %>
    </div>

    <div class="container">
        <h2>My Orders</h2>
        <div id="orders-container">
            <div class="loader"></div>
        </div>
    </div>

    <footer>
        <p>&copy; 2025 Plant Store. All rights reserved. | <a href="/policy">Privacy Policy</a></p>
    </footer>

    <script>
        function toggleCategorySidebar() {
  const sidebar = document.getElementById('categorySidebar');
  sidebar.classList.toggle('show');
  if (sidebar.classList.contains('show')) {
    document.body.classList.add('body-no-scroll');
  } else {
    document.body.classList.remove('body-no-scroll');
  }
}

        let profileVisible = false;

        function checkLoginBeforeAction(actionCallback) {
            fetch('/check-login')
                .then(res => res.json())
                .then(data => {
                    if (!data.loggedIn) {
                        document.getElementById('loginModal').style.display = 'flex';
                        throw new Error('User not logged in');
                    }
                    actionCallback();
                })
                .catch(err => console.error(err));
        }

        document.addEventListener("DOMContentLoaded", async () => {
            // Check login using session
            const loginCheck = await fetch('/check-login').then(res => res.json());
            if (!loginCheck.loggedIn) {
                document.getElementById('loginModal').style.display = 'flex';
                return;
            }

            try {
                // Get user profile to fetch userId
                const userResponse = await fetch('/api/users/profile');
                if (!userResponse.ok) {
                    alert('Session expired. Please login again.');
                    window.location.href = '/login';
                    return;
                }
                const userData = await userResponse.json();
                const userId = userData.user._id;

                // Fetch orders using the correct endpoint
                const response = await fetch(`/api/orders/user/${userId}`);
                if (!response.ok) throw new Error('Failed to fetch orders');

                const data = await response.json();
                const ordersContainer = document.getElementById('orders-container');

                if (!data.success || !data.orders || !data.orders.length) {
                    ordersContainer.innerHTML = "<p>No orders found.</p>";
                    return;
                }

                ordersContainer.innerHTML = data.orders.map(order => {
                    try {
                        const orderTotal = order.items ? order.items.reduce((total, item) => {
                            if (!item || !item.product) return total;
                            return total + ((item.product.price || 0) * (item.quantity || 0));
                        }, 0) : 0;

                        // Calculate progress based on order status
                        const statusProgress = {
                            'Order Placed': 25,
                            'Processing': 50,
                            'Shipped': 75,
                            'Delivered': 100
                        };
                        const progress = statusProgress[order.status] || 25;

                        return `
                            <div class="order-container">
                                <p><strong>Order ID:</strong> ${order._id || 'N/A'}</p>
                                <p><strong>Order Date:</strong> ${order.createdAt ? new Date(order.createdAt).toLocaleString() : 'N/A'}</p>
                                <div class="order-status">
                                    Status: ${order.status || 'Order Placed'}
                                    <span>🚚</span>
                                </div>
                                <div class="status-progress">
                                    <div class="status-progress-bar" style="width: ${progress}%"></div>
                                </div>
                                <div class="delivery-info">
                                    <p><strong>Delivery Address:</strong> ${order.address || 'N/A'}</p>
                                    <p><strong>Expected Delivery:</strong> ${order.deliveryDate ? new Date(order.deliveryDate).toLocaleDateString() : 'N/A'}</p>
                                </div>
                                ${order.items ? order.items.map(item => {
                                    if (!item || !item.product) {
                                        return `<div class="error-message">Product information unavailable</div>`;
                                    }
                                    return `
                                        <div class="order-item">
                                            <img src="${item.product.image_uri || 'https://source.unsplash.com/100x100/?plant'}" 
                                                 alt="${item.product.name || 'Product'}"
                                                 onerror="this.src='https://source.unsplash.com/100x100/?plant'">
                                            <div class="order-details">
                                                <div class="product-name">${item.product.name || 'Product Name Unavailable'}</div>
                                                <div class="product-price">₹${item.product.price || 0} per item</div>
                                                <p>Quantity: ${item.quantity || 0}</p>
                                                <p>Subtotal: ₹${(item.product.price || 0) * (item.quantity || 0)}</p>
                                            </div>
                                            <button class="track-button" onclick="alert('Tracking feature coming soon!')">Track Order</button>
                                        </div>
                                    `;
                                }).join('') : '<div class="error-message">No items found in this order</div>'}
                                <div class="total-amount">Total Amount: ₹${orderTotal}</div>
                            </div>
                        `;
                    } catch (orderError) {
                        console.error("Error processing order:", orderError);
                        return `<div class="error-message">Error displaying order information</div>`;
                    }
                }).join('');
            } catch (error) {
                console.error("Error fetching orders:", error);
                document.getElementById('orders-container').innerHTML = `
                    <div class="error-message">
                        <p>Failed to load orders. Please try refreshing the page or logging in again.</p>
                    </div>
                `;
            }
        });

        function searchOrders(searchTerm) {
            searchTerm = searchTerm.trim().toLowerCase();
            const orders = document.querySelectorAll('.order-container');
            orders.forEach(order => {
                const items = order.querySelectorAll('.order-item');
                let hasMatchingItem = false;
                items.forEach(item => {
                    const name = item.querySelector('.product-name').textContent.toLowerCase();
                    if (name.includes(searchTerm)) {
                        item.style.display = '';
                        hasMatchingItem = true;
                    } else {
                        item.style.display = 'none';
                    }
                });
                order.style.display = hasMatchingItem || searchTerm === '' ? '' : 'none';
            });
        }

        function isUserLoggedIn() {
            return localStorage.getItem('token') !== null;
        }

        function goToCart() {
            if (!isUserLoggedIn()) {
                document.getElementById('loginModal').style.display = 'flex';
                return;
            }
            window.location.href = '/cart';
        }

        function toggleProfile() {
  const dropdown = document.getElementById('profileDropdown');
  const modal = document.getElementById('loginModal');
  if (dropdown) {
    profileVisible = !profileVisible;
    dropdown.classList.toggle('show', profileVisible);
  } else if (modal) {
    modal.style.display = 'flex';
  }
}

        function logout() {
  localStorage.removeItem('token');
  localStorage.removeItem('cart');
  profileVisible = false;
  const dropdown = document.getElementById('profileDropdown');
  if (dropdown) dropdown.classList.remove('show');
  fetch('/api/users/logout', { method: 'POST', credentials: 'include' })
    .then(() => {
      window.location.href = '/login';
    })
    .catch(() => {
      window.location.href = '/login';
    });
}

        function closeLoginModal() {
            document.getElementById('loginModal').style.display = 'none';
        }

        window.addEventListener('click', function(e) {
  const sidebar = document.getElementById('categorySidebar');
  if (sidebar && sidebar.classList.contains('show') && !sidebar.contains(e.target) && !e.target.closest('.three-dots')) {
    sidebar.classList.remove('show');
    document.body.classList.remove('body-no-scroll');
  }
  const dropdown = document.getElementById('profileDropdown');
  if (dropdown && dropdown.classList.contains('show') && !dropdown.contains(e.target) && !e.target.closest('.profile-icon-btn')) {
    dropdown.classList.remove('show');
    profileVisible = false;
  }
  const modal = document.getElementById('loginModal');
  if (modal && modal.style.display === 'flex' && !modal.querySelector('.modal-content').contains(e.target)) {
    modal.style.display = 'none';
  }
});
    </script>
</body>
</html>