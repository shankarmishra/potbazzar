<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart - Plant Store</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
    <style>
        :root {
            --primary-color: #4CAF50;
            --secondary-color: #1976D2;
            --accent-color: #FF9800;
            --text-color: #222;
            --bg-color: #f7f7f7;
            --card-bg: #ffffff;
        }

        body {
            font-family: 'Poppins', Arial, sans-serif;
            background: var(--bg-color);
            margin: 0;
            padding: 0;
            color: #333;
            line-height: 1.6;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Navbar */
        .navbar {
            background: linear-gradient(90deg, var(--primary-color), #45a049);
            padding: 1rem 2rem;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .nav-logo img {
            height: 36px;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
        }

        .nav-links a {
            color: #fff;
            text-decoration: none;
            font-weight: 600;
            font-size: 1rem;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: background 0.3s, transform 0.2s;
        }

        .nav-links a:hover,
        .nav-links a:focus {
            background: rgba(0, 0, 0, 0.2);
            transform: translateY(-2px);
            outline: none;
        }

        .nav-icons {
            display: flex;
            align-items: center;
            gap: 1rem;
            max-width: 300px;
            width: 100%;
            min-width: 0;
            flex-shrink: 1;
        }

        /* Fix search bar overflow on small screens */
        .search-bar {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            border: 1px solid #ddd;
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            width: 100%;
            max-width: 220px;
            font-size: 1rem;
            transition: border-color 0.3s, box-shadow 0.3s;
            box-sizing: border-box;
            min-width: 0;
            flex: 1 1 0;
        }

        @media (max-width: 600px) {
            .search-bar {
                width: 100%;
                min-width: 0;
                max-width: 100vw;
                font-size: 1em;
            }
            .nav-icons {
                flex: 1 1 100%;
                min-width: 0;
            }
        }

        .cart-icon-btn,
        .profile-icon-btn,
        .three-dots {
            background: none;
            border: none;
            cursor: pointer;
        }

        .cart-icon,
        .profile-icon {
            width: 24px;
            height: 24px;
            filter: brightness(0) invert(1);
            transition: transform 0.3s;
        }

        .cart-icon-btn:hover .cart-icon,
        .profile-icon-btn:hover .profile-icon {
            transform: scale(1.1);
        }

        .three-dots {
            display: none;
            cursor: pointer;
            font-size: 2rem;
            color: #fff;
            margin: 0;
            z-index: 1201;
            background: none;
            border: none;
        }

        /* Profile Dropdown */
        .profile-dropdown {
            display: none;
            position: absolute;
            top: 60px;
            right: 1rem;
            background: var(--card-bg);
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            min-width: 240px;
            padding: 1rem;
            z-index: 1300;
        }

        .profile-dropdown.show {
            display: flex;
            flex-direction: column;
        }

        .profile-dropdown p {
            margin: 0.5rem 0;
            font-size: 0.95rem;
            color: var(--text-color);
        }

        .profile-dropdown button {
            width: 100%;
            padding: 0.5rem;
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 6px;
            font-size: 0.95rem;
            cursor: pointer;
            margin: 0.25rem 0;
            transition: background 0.3s, transform 0.2s;
        }

        .profile-dropdown button:hover {
            background: #388e3c;
            transform: translateY(-2px);
        }

        /* Category Bar (Desktop) */
        .all-categories-bar {
            background: #fff;
            border-bottom: 1px solid #e0e0e0;
            padding: 12px 10px;
            display: flex;
            gap: 24px;
            justify-content: center;
            flex-wrap: wrap;
            position: sticky;
            top: 60px;
            z-index: 900;
        }

        .category-bar-item {
            position: relative;
            margin-right: 18px;
            margin-bottom: 8px;
            white-space: nowrap;
        }

        .category-bar-item a {
            color: #388e3c;
            text-decoration: none;
            font-weight: 500;
            padding: 8px 12px;
            border-radius: 20px;
            transition: background 0.3s, color 0.3s;
            display: inline-block;
        }

        .category-bar-item a:hover {
            background: rgba(56, 142, 60, 0.1);
        }

        .subcategory-list {
            display: none;
            position: absolute;
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: #fff;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 10px;
            margin-top: 4px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            min-width: 150px;
            z-index: 1002;
        }

        .category-bar-item:hover .subcategory-list {
            display: block;
        }

        .subcategory-list a {
            color: #388e3c;
            padding: 6px 8px;
            border-radius: 4px;
            display: block;
            transition: background 0.3s;
            font-size: 0.98rem;
        }

        .subcategory-list a:hover {
            background: rgba(56, 142, 60, 0.1);
        }

        /* Category Sidebar (Mobile) */
        .category-sidebar {
            display: none;
            flex-direction: column;
            position: fixed;
            top: 0;
            left: -100vw;
            width: 80vw;
            max-width: 320px;
            height: 100vh;
            background: linear-gradient(135deg, #176b2c, #45a049);
            color: #fff;
            z-index: 2000;
            padding: 2rem 1.2rem 1.2rem 1.2rem;
            overflow-y: auto;
            transition: left 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .category-sidebar.show {
            display: flex;
            left: 0;
        }

        .category-sidebar .close-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            color: #fff;
            font-size: 2rem;
            cursor: pointer;
        }

        .sidebar-category {
            margin-bottom: 1.2rem;
        }

        .sidebar-category > a {
            color: #fff;
            font-size: 1.1rem;
            font-weight: 600;
            text-decoration: none;
        }

        .sidebar-subcategories {
            margin: 0.5rem 0 0 1rem;
            padding: 0;
            list-style: disc;
        }

        .sidebar-subcategories li {
            margin-bottom: 0.3rem;
        }

        .sidebar-subcategories a {
            color: #e0ffe0;
            font-size: 1rem;
            text-decoration: none;
        }

        .sidebar-subcategories a:hover {
            color: var(--accent-color);
        }

        /* Cart Items */
        .cart-items {
            margin: 120px auto 20px;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            width: 90%;
            max-width: 700px;
            text-align: left;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            min-height: 300px;
        }

        .cart-items h2 {
            text-align: center;
            color: #4CAF50;
            font-size: 2rem;
            margin-bottom: 20px;
        }

        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
            gap: 10px;
        }

        .cart-item:last-child {
            border-bottom: none;
        }

        .cart-item img {
            width: 70px;
            height: 70px;
            border-radius: 10px;
            object-fit: cover;
            margin-right: 10px;
        }

        .cart-item-info {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 4px;
        }

        .cart-item-info p {
            margin: 0;
        }

        .quantity-input {
            width: 50px;
            text-align: center;
            background-color: #f8f8f8;
            border: 1px solid #ddd;
            color: #333;
            border-radius: 5px;
            padding: 5px;
        }

        .cart-item-description {
            font-size: 0.9em;
            color: #555;
            margin-top: 5px;
        }

        .remove-btn {
            padding: 8px 14px;
            background-color: #e53935;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-left: 10px;
        }

        .remove-btn:hover {
            background-color: #b71c1c;
        }

        .stock-error {
            color: white;
            background-color: #e53935;
            text-align: center;
            margin: 10px 0;
            padding: 10px;
            border-radius: 5px;
            display: none;
        }

        .total-section {
            background: #f1f8e9;
            border-radius: 10px;
            padding: 18px 20px 14px 20px;
            margin: 30px 0 10px 0;
            box-shadow: 0 1px 4px rgba(76, 175, 80, 0.08);
            font-size: 1.1em;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .total-section p {
            margin: 8px 0;
            font-size: 1.1em;
            text-align: right;
        }

        .total-section strong {
            font-size: 1.2em;
            color: #388e3c;
        }

        .cart-actions {
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
            gap: 10px;
        }

        .cart-actions button {
            padding: 12px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.1em;
            transition: background-color 0.3s;
            flex: 1 1 48%;
        }

        .cart-actions button:hover {
            background-color: #388e3c;
        }

        /* Responsive */
        @media (max-width: 900px) {
            .cart-items {
                width: 95%;
            }
            .total-section, .cart-actions {
                max-width: 95%;
            }
        }

        @media (max-width: 800px) {
            .all-categories-bar {
                display: none !important;
            }
            .three-dots {
                display: block !important;
            }
            .nav-links {
                display: none !important;
            }
        }

        @media (min-width: 801px) {
            .three-dots,
            .category-sidebar {
                display: none !important;
            }
            .nav-links {
                display: flex !important;
            }
        }

        @media (max-width: 600px) {
            .cart-items {
                width: 100%;
                margin: 110px 10px 20px;
                padding: 10px;
                border-radius: 0;
            }
            .cart-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 8px;
                padding: 10px 4px;
            }
            .cart-item img {
                margin: 0 0 8px 0;
            }
            .cart-actions {
                flex-direction: column;
                gap: 8px;
                width: 100%;
            }
            .total-section {
                padding: 12px 8px;
                font-size: 1em;
            }
            .navbar {
                padding: 0.75rem 1rem;
            }
            .nav-logo img {
                height: 30px;
            }
            .search-bar {
                width: 150px;
            }
            .profile-dropdown {
                right: 0.5rem;
                left: 0.5rem;
                min-width: unset;
                width: calc(100vw - 1rem);
                top: 56px;
                border-radius: 10px;
                font-size: 1rem;
                padding: 1rem 0.5rem;
            }
            .category-sidebar {
                width: 100vw;
                max-width: 100vw;
                padding: 2rem 0.5rem 1rem 0.5rem;
            }
        }

        /* Add this for body scroll lock when sidebar is open */
        .body-no-scroll {
            overflow: hidden !important;
            height: 100vh !important;
            position: fixed !important;
            width: 100vw;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <button class="three-dots" id="threeDotsBtn" onclick="toggleCategorySidebar()" aria-label="Open Categories">☰</button>
        <a href="/" class="nav-logo">
            <img src="/static/logo.png" alt="Plant Store Logo" loading="lazy" />
        </a>
        <div class="nav-links">
            <a href="/">Home</a>
            <a href="https://www.homegardennet.com/?m=1" target="_blank" rel="noopener">Blog</a>
            <a href="/#about">About</a>
            <a href="/policy">Policy</a>
            <a href="/cart">Cart</a>
        </div>
        <div class="nav-icons">
            <input
                type="text"
                placeholder="Search products..."
                class="search-bar"
                onkeyup="searchProducts(this.value)"
                aria-label="Search products"
            />
        </div>
    </nav>

    <!-- Profile Dropdown / Login Modal -->
    <% if (user) { %>
        <div class="profile-dropdown" id="profileDropdown">
            <p><strong>Name:</strong> <%= user.name || 'Not provided' %></p>
            <p><strong>Email:</strong> <%= user.email %></p>
            <p><strong>Phone:</strong> <%= user.phone || 'Not provided' %></p>
            <p><strong>Address:</strong> <%= user.address || 'Not provided' %></p>
            <button onclick="window.location.href='/orders'">My Orders</button>
            <button onclick="logout()">Logout</button>
        </div>
    <% } else { %>
        <div class="modal" id="loginModal" style="display:none;position:fixed;z-index:2000;left:0;top:0;width:100vw;height:100vh;background:rgba(0,0,0,0.5);justify-content:center;align-items:center;">
            <div class="modal-content" style="background:#fff;padding:24px 32px;border-radius:8px;min-width:280px;max-width:90vw;text-align:center;position:relative;">
                <button class="close-btn" onclick="closeLoginModal()" style="position:absolute;top:10px;right:10px;background:none;border:none;font-size:1.5rem;cursor:pointer;color:#333;">×</button>
                <h3>Please log in or register to proceed</h3>
                <button onclick="window.location.href='/login'" style="padding:10px 20px;background:#4CAF50;color:#fff;border:none;border-radius:5px;cursor:pointer;margin:5px;">Login</button>
                <button onclick="window.location.href='/register'" style="padding:10px 20px;background:#388e3c;color:#fff;border:none;border-radius:5px;cursor:pointer;margin:5px;">Register</button>
            </div>
        </div>
    <% } %>

    <!-- Category Bar (Desktop) -->
    <div class="all-categories-bar">
        <% if (typeof categories !== 'undefined' && categories && categories.length) { %>
            <% categories.forEach(category => { %>
                <div class="category-bar-item">
                    <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>">
                        <span><%= category.name %></span>
                    </a>
                    <% if (category.subcategories && category.subcategories.length > 0) { %>
                        <div class="subcategory-list">
                            <% category.subcategories.forEach(sub => { %>
                                <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>&sub=<%= encodeURIComponent(sub.name ? sub.name : sub) %>"><%= sub.name ? sub.name : sub %></a>
                            <% }) %>
                        </div>
                    <% } %>
                </div>
            <% }) %>
        <% } %>
    </div>

    <!-- Category Sidebar (Mobile) -->
    <div class="category-sidebar" id="categorySidebar">
        <button class="close-btn" onclick="toggleCategorySidebar()" aria-label="Close Categories">×</button>
        <h3 style="margin-bottom:1rem;">Categories</h3>
        <% if (typeof categories !== 'undefined' && categories && categories.length) { %>
            <% categories.forEach(category => { %>
                <div class="sidebar-category">
                    <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>"><strong><%= category.name %></strong></a>
                    <% if (category.subcategories && category.subcategories.length) { %>
                        <ul class="sidebar-subcategories">
                            <% category.subcategories.forEach(sub => { %>
                                <li>
                                    <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>&sub=<%= encodeURIComponent(sub.name ? sub.name : sub) %>"><%= sub.name ? sub.name : sub %></a>
                                </li>
                            <% }) %>
                        </ul>
                    <% } %>
                </div>
            <% }) %>
        <% } %>
    </div>

    <div class="cart-items">
        <h2>Your Cart</h2>
        <div id="stock-error" class="stock-error"></div>
        <div id="cart-items-container"></div>
        <div class="total-section">
            <p>Subtotal: ₹<span id="subtotal-price">0.00</span></p>
            <p>Delivery: ₹<span id="delivery-charge">79.00</span></p>
            <p><strong>Total: ₹<span id="total-price">0.00</span></strong></p>
        </div>
        <div class="cart-actions">
            <button onclick="proceedToCheckout()">Proceed to Checkout</button>
            <button onclick="emptyCart()">Empty Cart</button>
        </div>
    </div>

    <script>
        let profileVisible = false;

        async function fetchProductStock(productId) {
            try {
                const response = await fetch(`/api/products/product/stock/${productId}`);
                if (!response.ok) throw new Error('Failed to fetch stock');
                const data = await response.json();
                if (typeof data.stock !== 'number' || isNaN(data.stock)) throw new Error('Invalid stock data');
                return data.stock;
            } catch (error) {
                console.error('Error fetching stock:', error);
                showStockError('Failed to fetch stock for some items. Please try again later.');
                return -1;
            }
        }

        function showStockError(msg) {
            const err = document.getElementById('stock-error');
            err.textContent = msg;
            err.style.display = 'block';
            setTimeout(() => {
                err.style.display = 'none';
                err.textContent = '';
            }, 3000);
        }

        function searchProducts(searchTerm) {
            searchTerm = searchTerm.trim().toLowerCase();
            const items = document.querySelectorAll('.cart-item');
            items.forEach(item => {
                const name = item.querySelector('.cart-item-info strong').textContent.toLowerCase();
                item.style.display = name.includes(searchTerm) ? '' : 'none';
            });
        }

        async function loadCart() {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const cartItemsContainer = document.getElementById('cart-items-container');
            let subtotal = 0;
            const deliveryCharge = cart.length ? 79 : 0;

            cartItemsContainer.innerHTML = '';

            if (cart.length === 0) {
                cartItemsContainer.innerHTML = '<p>Your cart is empty.</p>';
                document.getElementById('subtotal-price').textContent = '0.00';
                document.getElementById('delivery-charge').textContent = '0.00';
                document.getElementById('total-price').textContent = '0.00';
            } else {
                for (const item of cart) {
                    const latestStock = await fetchProductStock(item.id);
                    item.stock = (typeof latestStock === 'number' && latestStock >= 0) ? latestStock : 0;
                    item.fetchFailed = latestStock === -1;

                    if (item.quantity > item.stock) {
                        item.quantity = item.stock;
                        localStorage.setItem('cart', JSON.stringify(cart));
                        showStockError(`Adjusted quantity for ${item.name} to available stock of ${item.stock}.`);
                    }

                    subtotal += item.price * item.quantity;

                    const cartItem = document.createElement('div');
                    cartItem.classList.add('cart-item');

                    const fetchFailed = latestStock === -1;
                    const outOfStock = !fetchFailed && (item.stock === 0);

                    cartItem.innerHTML = `
                        <img src="${item.image || 'https://source.unsplash.com/100x100/?plant'}" alt="${item.name}">
                        <div class="cart-item-info">
                            <p><strong>${item.name}</strong></p>
                            <p>₹${item.price.toFixed(2)}</p>
                            <input type="number" min="1" max="${item.stock}" class="quantity-input" value="${item.quantity}" 
                                onchange="updateQuantity('${item.id}', this.value, ${item.stock})" ${(outOfStock || fetchFailed) ? 'disabled' : ''}>
                            <p style="color:#e53935;font-size:0.95em;">
                                ${fetchFailed ? 'Error fetching stock' : (outOfStock ? 'Out of Stock' : 'Stock: ' + item.stock)}
                            </p>
                        </div>
                        <div class="cart-item-description">
                            <p>${item.description || 'No description available'}</p>
                        </div>
                        <button class="remove-btn" onclick="removeItem('${item.id}')">Remove</button>
                    `;

                    cartItemsContainer.appendChild(cartItem);
                }

                document.getElementById('subtotal-price').textContent = subtotal.toFixed(2);
                document.getElementById('delivery-charge').textContent = deliveryCharge.toFixed(2);
                document.getElementById('total-price').textContent = (subtotal + deliveryCharge).toFixed(2);
            }
        }

        async function updateQuantity(id, newQuantity, stock) {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const item = cart.find(item => item.id === id);

            if (item) {
                const latestStock = await fetchProductStock(id);
                item.stock = (typeof latestStock === 'number' && latestStock >= 0) ? latestStock : 0;
                stock = item.stock;

                const quantity = Math.max(1, parseInt(newQuantity));
                if (quantity > stock) {
                    showStockError(`Cannot exceed available stock of ${stock}!`);
                    item.quantity = stock;
                } else {
                    item.quantity = quantity;
                }
                localStorage.setItem('cart', JSON.stringify(cart));
                loadCart();
            }
        }

        async function proceedToCheckout() {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            if (!cart.length) {
                alert('Your cart is empty. Please add items to your cart before proceeding to checkout.');
                return;
            }
            checkLoginBeforeAction(async () => {
                for (const item of cart) {
                    const latestStock = await fetchProductStock(item.id);
                    if (typeof latestStock !== 'number' || latestStock < 1 || item.quantity > latestStock) {
                        showStockError(`Cannot proceed: ${item.name} is out of stock or stock unavailable!`);
                        item.stock = latestStock > 0 ? latestStock : 0;
                        item.quantity = Math.min(item.quantity, item.stock);
                        localStorage.setItem('cart', JSON.stringify(cart));
                        loadCart();
                        return;
                    }
                }
                window.location.href = '/checkout';
            });
        }

        function removeItem(id) {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            cart = cart.filter(item => item.id !== id);
            localStorage.setItem('cart', JSON.stringify(cart));
            loadCart();
        }

        function emptyCart() {
            localStorage.removeItem('cart');
            loadCart();
        }

        function isUserLoggedIn() {
            return localStorage.getItem('token') !== null;
        }

        function checkLoginBeforeAction(actionCallback) {
            fetch('/check-login')
                .then(res => res.json())
                .then(data => {
                    if (data.loggedIn) {
                        actionCallback();
                    } else {
                        document.getElementById('loginModal').style.display = 'flex';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('loginModal').style.display = 'flex';
                });
        }

        function goToCart() {
            if (!isUserLoggedIn()) {
                document.getElementById('loginModal').style.display = 'flex';
                return;
            }
            window.location.href = '/cart';
        }

        function toggleProfile() {
            const token = localStorage.getItem('token');
            const dropdown = document.getElementById('profileDropdown');
            const modal = document.getElementById('loginModal');
            if (!token) {
                if (modal) modal.style.display = 'flex';
                return;
            }
            if (dropdown) {
                profileVisible = !profileVisible;
                dropdown.classList.toggle('show', profileVisible);
            }
        }

        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('cart');
            profileVisible = false;
            const dropdown = document.getElementById('profileDropdown');
            if (dropdown) dropdown.classList.remove('show');
            fetch('/api/users/logout', { method: 'POST', credentials: 'include' })
                .then(() => {
                    window.location.href = '/login';
                })
                .catch(() => {
                    window.location.href = '/login';
                });
        }

        function closeLoginModal() {
            document.getElementById('loginModal').style.display = 'none';
        }

        function toggleCategorySidebar() {
            const sidebar = document.getElementById('categorySidebar');
            sidebar.classList.toggle('show');
            if (sidebar.classList.contains('show')) {
                document.body.classList.add('body-no-scroll');
            } else {
                document.body.classList.remove('body-no-scroll');
            }
        }

        window.addEventListener('click', function(e) {
            const sidebar = document.getElementById('categorySidebar');
            if (sidebar && sidebar.classList.contains('show') && !sidebar.contains(e.target) && !e.target.closest('.three-dots')) {
                sidebar.classList.remove('show');
                document.body.classList.remove('body-no-scroll');
            }

            const dropdown = document.getElementById('profileDropdown');
            if (dropdown && dropdown.classList.contains('show') && !dropdown.contains(e.target) && !e.target.closest('.profile-icon-btn')) {
                dropdown.classList.remove('show');
                profileVisible = false;
            }

            const modal = document.getElementById('loginModal');
            if (modal && modal.style.display === 'flex' && !modal.querySelector('.modal-content').contains(e.target)) {
                modal.style.display = 'none';
            }
        });

        loadCart();
    </script>
</body></html>