<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Login</title>
  <style>
    /* Same CSS as your original â€” kept as is */
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      color: #333;
      animation: fadeIn 1s ease-out;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .container {
      max-width: 400px;
      width: 90%;
      background: #fff;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      position: relative;
      animation: slideUp 0.5s ease-out;
    }

    @keyframes slideUp {
      from { transform: translateY(50px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }

    .logo {
      position: absolute;
      top: -60px;
      left: 50%;
      transform: translateX(-50%);
      width: 100px;
      height: 100px;
      border-radius: 50%;
      background-color: #4CAF50;
      padding: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .logo img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }

    .container h2 {
      margin-top: 50px;
      margin-bottom: 20px;
      font-size: 1.8em;
      color: #4CAF50;
      text-align: center;
    }

    input[type="tel"], input[type="password"] {
      width: 100%;
      padding: 12px;
      margin: 10px 0;
      border: 1px solid #ddd;
      border-radius: 4px;
      background: #fff;
      color: #333;
      box-sizing: border-box;
      transition: border-color 0.3s;
    }

    input[type="tel"]:focus, input[type="password"]:focus {
      border-color: #4CAF50;
      outline: none;
    }

    .forgot-password-container {
      text-align: right;
      margin-top: -8px;
      margin-bottom: 10px;
    }

    .forgot-password-link {
      font-size: 0.9em;
      color: #4CAF50;
      text-decoration: none;
    }

    .forgot-password-link:hover {
      text-decoration: underline;
    }

    input[type="submit"] {
      background-color: #4CAF50;
      color: white;
      border: none;
      padding: 12px;
      cursor: pointer;
      border-radius: 4px;
      width: 100%;
      margin-top: 10px;
      font-size: 16px;
      transition: background-color 0.3s, transform 0.2s;
    }

    input[type="submit"]:hover {
      background-color: #45a049;
      transform: translateY(-2px);
    }

    .register-link {
      color: #4CAF50;
      text-decoration: none;
      margin-left: 5px;
      font-size: 0.9em;
    }

    .register-link:hover {
      text-decoration: underline;
    }

    #message {
      margin-top: 15px;
      font-weight: bold;
    }

    #message.success {
      color: #4CAF50;
    }

    #message.error {
      color: red;
    }
  </style>
</head>
<body>

  <div class="container">
    <div class="logo">
      <img src="/static/logos.png" alt="Logo" onerror="this.style.display='none'">
    </div>
    <h2>Login</h2>
    <form id="loginForm" autocomplete="off">
      <input type="tel" name="phone" placeholder="Phone Number" required pattern="^\d{10}$" title="Phone number must be 10 digits" />
      <input type="password" name="password" placeholder="Password" required minlength="6" />
      <div class="forgot-password-container">
        <a href="/forgot-password" class="forgot-password-link">Forgot Password?</a>
      </div>
      <input type="submit" value="Login" />
    </form>
    <p id="message" aria-live="polite"></p>
    <p>Don't have an account?<a href="/register" class="register-link">Register here</a></p>
  </div>

  <script>
    document.getElementById('loginForm').addEventListener('submit', async function (event) {
      event.preventDefault();

      const formData = new FormData(this);
      const data = Object.fromEntries(formData.entries());

      const messageEl = document.getElementById('message');
      messageEl.textContent = 'Logging in...';
      messageEl.className = '';

      try {
        const response = await fetch('/api/users/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });

        // If backend sends a redirect (HTML), follow it
        if (response.redirected) {
          window.location.href = response.url;
          return;
        }

        // Otherwise, handle JSON response
        const result = await response.json();

        if (response.ok) {
          messageEl.textContent = 'Login successful! Redirecting...';
          messageEl.className = 'success';
          setTimeout(() => {
            window.location.href = '/';
          }, 1000);
        } else {
          messageEl.textContent = result.message || 'Login failed.';
          messageEl.className = 'error';
        }
      } catch (error) {
        console.error(error);
        messageEl.textContent = 'An error occurred. Please try again.';
        messageEl.className = 'error';
      }
    });
  </script>

</body>
</html>
